; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32825.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	v
_DATA	SEGMENT
v	DD	0ffffffffH
	DD	01fH
	DD	08H
	DD	01eH
	DD	0ffffffffH
	DD	07H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	01dH
	DD	0ffffffffH
	DD	01aH
	DD	06H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	02H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	01cH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	013H
	DD	019H
	DD	0ffffffffH
	DD	05H
	DD	0ffffffffH
	DD	011H
	DD	0ffffffffH
	DD	017H
	DD	0eH
	DD	01H
	DD	0ffffffffH
	DD	09H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	01bH
	DD	0ffffffffH
	DD	03H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	014H
	DD	0ffffffffH
	DD	012H
	DD	018H
	DD	0fH
	DD	0aH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	04H
	DD	0ffffffffH
	DD	015H
	DD	0ffffffffH
	DD	010H
	DD	0bH
	DD	0ffffffffH
	DD	016H
	DD	0ffffffffH
	DD	0cH
	DD	0dH
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
_DATA	ENDS
PUBLIC	__local_stdio_printf_options
PUBLIC	_vfprintf_l
PUBLIC	printf
PUBLIC	fun_fun
PUBLIC	main
EXTRN	__acrt_iob_func:PROC
EXTRN	__stdio_common_vfprintf:PROC
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$printf
pdata	ENDS
pdata	SEGMENT
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$main
pdata	ENDS
_DATA	SEGMENT
$SG9424	DB	'%d', 0aH, 00H
_DATA	ENDS
xdata	SEGMENT
$unwind$main DD	010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 011801H
	DD	06218H
xdata	ENDS
; Function compile flags: /Odtp
; File C:\Users\celic\Documents\projects\gilqore\asm\test2.c
_TEXT	SEGMENT
a$ = 32
main	PROC

; 23   : int main() {

$LN3:
	sub	rsp, 56					; 00000038H

; 24   :     uint32_t a = 123456789;

	mov	DWORD PTR a$[rsp], 123456789		; 075bcd15H

; 25   :     printf("%d\n", fun_fun(a));

	mov	ecx, DWORD PTR a$[rsp]
	call	fun_fun
	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG9424
	call	printf

; 26   : 
; 27   :     return 0;

	xor	eax, eax

; 28   : }

	add	rsp, 56					; 00000038H
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\Users\celic\Documents\projects\gilqore\asm\test2.c
_TEXT	SEGMENT
a$ = 8
fun_fun	PROC

; 12   : int32_t fun_fun(int32_t a) {

	mov	DWORD PTR [rsp+8], ecx

; 13   :     a |= a >> 1;

	mov	eax, DWORD PTR a$[rsp]
	sar	eax, 1
	mov	ecx, DWORD PTR a$[rsp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR a$[rsp], eax

; 14   :     a |= a >> 2;

	mov	eax, DWORD PTR a$[rsp]
	sar	eax, 2
	mov	ecx, DWORD PTR a$[rsp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR a$[rsp], eax

; 15   :     a |= a >> 4;

	mov	eax, DWORD PTR a$[rsp]
	sar	eax, 4
	mov	ecx, DWORD PTR a$[rsp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR a$[rsp], eax

; 16   :     a |= a >> 8;

	mov	eax, DWORD PTR a$[rsp]
	sar	eax, 8
	mov	ecx, DWORD PTR a$[rsp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR a$[rsp], eax

; 17   :     a |= a >> 16;

	mov	eax, DWORD PTR a$[rsp]
	sar	eax, 16
	mov	ecx, DWORD PTR a$[rsp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR a$[rsp], eax

; 18   :     a = ((uint32_t)(a * 0x4badf0d)) >> 26; 

	imul	eax, DWORD PTR a$[rsp], 79355661	; 04badf0dH
	shr	eax, 26
	mov	DWORD PTR a$[rsp], eax

; 19   : 
; 20   :     return v[a];

	movsxd	rax, DWORD PTR a$[rsp]
	lea	rcx, OFFSET FLAT:v
	mov	eax, DWORD PTR [rcx+rax*4]

; 21   : }

	ret	0
fun_fun	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\stdio.h
;	COMDAT printf
_TEXT	SEGMENT
_Result$ = 32
_ArgList$ = 40
_Format$ = 64
printf	PROC						; COMDAT

; 956  :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	sub	rsp, 56					; 00000038H

; 957  :         int _Result;
; 958  :         va_list _ArgList;
; 959  :         __crt_va_start(_ArgList, _Format);

	lea	rax, QWORD PTR _Format$[rsp+8]
	mov	QWORD PTR _ArgList$[rsp], rax

; 960  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

	mov	ecx, 1
	call	__acrt_iob_func
	mov	r9, QWORD PTR _ArgList$[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR _Format$[rsp]
	mov	rcx, rax
	call	_vfprintf_l
	mov	DWORD PTR _Result$[rsp], eax

; 961  :         __crt_va_end(_ArgList);

	mov	QWORD PTR _ArgList$[rsp], 0

; 962  :         return _Result;

	mov	eax, DWORD PTR _Result$[rsp]

; 963  :     }

	add	rsp, 56					; 00000038H
	ret	0
printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\stdio.h
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT

; 644  :     {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 645  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

	call	__local_stdio_printf_options
	mov	rcx, QWORD PTR _ArgList$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR _Locale$[rsp]
	mov	r8, QWORD PTR _Format$[rsp]
	mov	rdx, QWORD PTR _Stream$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	__stdio_common_vfprintf

; 646  :     }

	add	rsp, 56					; 00000038H
	ret	0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

	ret	0
__local_stdio_printf_options ENDP
_TEXT	ENDS
END
