#ifndef ERROR_CODE_H
# define ERROR_CODE_H

# include "compile_defs.h"
# include "data_types.h"

# define ERROR_CODE_DISPOSITION 1000

// // note: start error codes for modules
// enum ERROR_CODE {
//     ERROR_CODE_DATA_STRUCTURES_START            = 1,
//     ERROR_CODE_DATA_STRUCTURES_END              = 1 * ERROR_CODE_DISPOSITION - 1,

//     ERROR_CODE_GRAPHICS_START,
//     ERROR_CODE_GRAPHICS_END                     = 2 * ERROR_CODE_DISPOSITION - 1,

//     ERROR_CODE_IO_START,
//     ERROR_CODE_IO_END                           = 3 * ERROR_CODE_DISPOSITION - 1,

//     ERROR_CODE_LIBC_START,
//     ERROR_CODE_LIBC_END                         = 4 * ERROR_CODE_DISPOSITION - 1,

//     ERROR_CODE_MATH_START,
//     ERROR_CODE_MATH_END                         = 5 * ERROR_CODE_DISPOSITION - 1,

//     ERROR_CODE_SYSTEM_START,
//     ERROR_CODE_SYSTEM_END                       = 6 * ERROR_CODE_DISPOSITION - 1,

//     ERROR_CODE_TEST_FRAMEWORK_START,
//     ERROR_CODE_TEST_FRAMEWORK_END               = 7 * ERROR_CODE_DISPOSITION - 1,

//     ERROR_CODE_TYPES_START,
//     ERROR_CODE_TYPES_END                        = 8 * ERROR_CODE_DISPOSITION - 1
// };
// enum ERROR_CODE {
//     ERROR_CODE_ABS              = 1 * ERROR_CODE_DISPOSITION,
//     ERROR_CODE_BASIC_TYPES      = 2 * ERROR_CODE_DISPOSITION,
//     ERROR_CODE_CIRCULAR_BUFFER  = 3 * ERROR_CODE_DISPOSITION,
//     ERROR_CODE_CLAMP            = 4 * ERROR_CODE_DISPOSITION,
//     ERROR_CODE_COLOR            = 5 * ERROR_CODE_DISPOSITION,
//     ERROR_CODE_COMPARE          = 6 * ERROR_CODE_DISPOSITION,
//     ERROR_CODE_CONSOLE          = 7 * ERROR_CODE_DISPOSITION,
//     ERROR_CODE_DATA_STRUCTURES  = 8 * ERROR_CODE_DISPOSITION,
//     ERROR_CODE_FILE             = 9 * ERROR_CODE_DISPOSITION,
//     ERROR_CODE_LERP             = 10 * ERROR_CODE_DISPOSITION,
//     ERROR_CODE_LIBC             = 11 * ERROR_CODE_DISPOSITION,
//     ERROR_CODE_MATH             = 12 * ERROR_CODE_DISPOSITION,
//     ERROR_CODE_MOD              = 13 * ERROR_CODE_DISPOSITION,
//     ERROR_CODE_RANDOM           = 14 * ERROR_CODE_DISPOSITION,
//     ERROR_CODE_SQRT             = 15 * ERROR_CODE_DISPOSITION,
//     ERROR_CODE_TEST_FRAMEWORK   = 16 * ERROR_CODE_DISPOSITION,
//     ERROR_CODE_VECTOR_TYPES     = 17 * ERROR_CODE_DISPOSITION
// };

GIL_API void error_code__exit(u32 error_code);

#endif

#define ERROR_CODE_BASE_GRAPHICS         1000
#define ERROR_CODE_BASE_IO               2000
#define ERROR_CODE_BASE_LIBC             3000

/*
*/