Formal grammar:
expression     -> literal
                | unary
                | binary
                | grouping ;

literal        -> NUMBER | STRING | "true" | "false" | "nil" ;
grouping       -> "(" expression ")" ;
unary          -> ( "-" | "!" ) expression ;
binary         -> expression operator expression ;
operator       -> "==" | "!=" | "<" | "<=" | ">" | ">="
                | "+"  | "-"  | "*" | "/" ;

Precedence and Associativity:
expression     -> comma ;
comma          -> ternary ( "," expression)* ;
ternary        -> equality ( "?" expression ":" expression )* ;
equality       -> comparison ( ( "!=" | "==" ) comparison )* ;
comparison     -> term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
term           -> factor ( ( "-" | "+" ) factor )* ;
factor         -> unary ( ( "/" | "*" ) unary )* ;
unary          -> ( "!" | "-" ) unary
                | primary ;
primary        -> NUMBER | STRING | "true" | "false" | "nil"
                | "(" expression ")" ;
