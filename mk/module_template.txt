$(MODULE_NAME)_path_curdir          := $(dir $(lastword $(MAKEFILE_LIST)))
$(MODULE_NAME)_name_curdir          := $(notdir $(patsubst %/,%,$($(MODULE_NAME)_path_curdir)))
$(MODULE_NAME)_child_makefiles      := $(wildcard $($(MODULE_NAME)_path_curdir)*/*mk)
$(MODULE_NAME)_names                := $(basename $(notdir $($(MODULE_NAME)_child_makefiles)))
$(MODULE_NAME)_all_targets          := $(foreach $(MODULE_NAME),$($(MODULE_NAME)_names),$($(MODULE_NAME))_all)
$(MODULE_NAME)_strip_targets        := $(foreach $(MODULE_NAME),$($(MODULE_NAME)_names),$($(MODULE_NAME))_strip)
$(MODULE_NAME)_clean_targets        := $(foreach $(MODULE_NAME),$($(MODULE_NAME)_names),$($(MODULE_NAME))_clean)
$(MODULE_NAME)_install_path         := $(PATH_INSTALL)/$($(MODULE_NAME)_name_curdir)
$(MODULE_NAME)_install_path_static  := $($(MODULE_NAME)_install_path)$(EXT_LIB_STATIC)
$(MODULE_NAME)_install_path_shared  := $($(MODULE_NAME)_install_path)$(EXT_LIB_SHARED)
$(MODULE_NAME)_sources              := $(wildcard $($(MODULE_NAME)_path_curdir)*.c)
$(MODULE_NAME)_static_objects       := $(patsubst %.c, %_static.o, $($(MODULE_NAME)_sources))
$(MODULE_NAME)_shared_objects       := $(patsubst %.c, %_shared.o, $($(MODULE_NAME)_sources))
$(MODULE_NAME)_depends              := $(patsubst %.c, %.d, $($(MODULE_NAME)_sources))
$(MODULE_NAME)_depends_modules      := $(MODULE_LIBDEP_MODULES)
$(MODULE_NAME)_depends_libs         := $(foreach module,$($(MODULE_NAME)_depends_modules),$(PATH_INSTALL)/$(module)$(EXT))
$(MODULE_NAME)_depends_libs_rules   := $(foreach module,$($(MODULE_NAME)_depends_modules),$(module)_all)

include $($(MODULE_NAME)_child_makefiles)

$($(MODULE_NAME)_path_curdir)%_static.o: $($(MODULE_NAME)_path_curdir)%.c
	$(CC) -c $< -o $@ $(CFLAGS) -MMD -MP -MF $@.d -DGIL_LIB_STATIC

$($(MODULE_NAME)_path_curdir)%_shared.o: $($(MODULE_NAME)_path_curdir)%.c
	$(CC) -c $< -o $@ $(CFLAGS) -MMD -MP -MF $@.d -fPIC -DGIL_LIB_SHARED_EXPORT

ifneq ($($(MODULE_NAME)_static_objects),)
$($(MODULE_NAME)_install_path_static): | $($(MODULE_NAME)_depends_libs_rules)
$($(MODULE_NAME)_install_path_static): $($(MODULE_NAME)_static_objects)
	ar -rcs $@ $^ $($(MODULE_NAME)_depends_libs)
endif

ifneq ($($(MODULE_NAME)_shared_objects),)
$($(MODULE_NAME)_install_path_shared): | $($(MODULE_NAME)_depends_libs_rules)
$($(MODULE_NAME)_install_path_shared): $($(MODULE_NAME)_shared_objects)
	$(CC) -o $@ $^ $(LFLAGS) -shared $($(MODULE_NAME)_depends_libs)
endif


.PHONY: $(MODULE_NAME)_all
$(MODULE_NAME)_all: $($(MODULE_NAME)_all_targets) ## build and install all $(MODULE_NAME) static and shared libraries
$(MODULE_NAME)_all: $($(MODULE_NAME)_install_path_shared)
$(MODULE_NAME)_all: $($(MODULE_NAME)_install_path_static)

.PHONY: $(MODULE_NAME)_clean
$(MODULE_NAME)_clean: $($(MODULE_NAME)_clean_targets) ## remove and deinstall all $(MODULE_NAME) static and shared libraries
$(MODULE_NAME)_clean:
	- $(RM) $($(MODULE_NAME)_install_path_static) $($(MODULE_NAME)_install_path_shared) $($(MODULE_NAME)_static_objects) $($(MODULE_NAME)_shared_objects) $($(MODULE_NAME)_depends)

.PHONY: $(MODULE_NAME)_strip
$(MODULE_NAME)_strip: $($(MODULE_NAME)_strip_targets) ## removes all symbols that are not needed from all the $(MODULES_NAME) shared libraries for relocation processing
$(MODULE_NAME)_strip:
	strip --strip-all $($(MODULE_NAME)_install_path_shared)

-include $($(MODULE_NAME)_depends)
