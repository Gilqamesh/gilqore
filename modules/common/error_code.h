#ifndef ERROR_CODE_H
# define ERROR_CODE_H

# include "compile_defs.h"
# include "data_types.h"

# define ERROR_CODE_DISPOSITION 1000

// note: start error codes for modules
enum ERROR_CODE {
    ERROR_CODE_ABS              = 1 * ERROR_CODE_DISPOSITION,
    ERROR_CODE_BASIC_TYPES      = 2 * ERROR_CODE_DISPOSITION,
    ERROR_CODE_CIRCULAR_BUFFER  = 3 * ERROR_CODE_DISPOSITION,
    ERROR_CODE_CLAMP            = 4 * ERROR_CODE_DISPOSITION,
    ERROR_CODE_COLOR            = 5 * ERROR_CODE_DISPOSITION,
    ERROR_CODE_COMPARE          = 6 * ERROR_CODE_DISPOSITION,
    ERROR_CODE_CONSOLE          = 7 * ERROR_CODE_DISPOSITION,
    ERROR_CODE_DATA_STRUCTURES  = 8 * ERROR_CODE_DISPOSITION,
    ERROR_CODE_IO               = 10 * ERROR_CODE_DISPOSITION,
    ERROR_CODE_LERP             = 11 * ERROR_CODE_DISPOSITION,
    ERROR_CODE_LIBC             = 12 * ERROR_CODE_DISPOSITION,
    ERROR_CODE_MATH             = 13 * ERROR_CODE_DISPOSITION,
    ERROR_CODE_MOD              = 14 * ERROR_CODE_DISPOSITION,
    ERROR_CODE_RANDOM           = 15 * ERROR_CODE_DISPOSITION,
    ERROR_CODE_SQRT             = 16 * ERROR_CODE_DISPOSITION,
    ERROR_CODE_SYSTEM           = 17 * ERROR_CODE_DISPOSITION,
    ERROR_CODE_TEST_FRAMEWORK   = 18 * ERROR_CODE_DISPOSITION,
    ERROR_CODE_VECTOR_TYPES     = 19 * ERROR_CODE_DISPOSITION
};

GIL_API void error_code__exit(u32 error_code);

#endif
